UMLet free uml szerkesztő program

a jobb alsó properties részen lehet gyorsan írni , -- és tab használatábal, a rajzolást rendesen csinálja
UML-ben nem minden osztályt kell leírni, csak a legfontosabbakat (mondjuk max tíz)


minden egyes típusnak van eyg statikus metódusa, ami átalakítja egyikből a másikba: parse
pl: Integer.parseInt()

Az enum olyan osztály, melynek elemei statikus példányúak, és előre megadottak.

enumba lehet attribútumokat fölvenni

tesztek:
pomba fel kell venni a jupiter motort,
ne az src-be, hanem a teszt mappába tedd a teszteket.
Alt enterrel lehet osztályhoz tesztet létrehozni
@DisplayName("amit kiír balra, szépen")
@TestMethodOrder(MethodOrderer.Random.class)

teszteknél kisbetűs név, szóköz helyett alulvonás
assertEquals -> String.equals()
assertSame -> érték alapú egyenlőség

Előfeltételeket:
@BeforeEach
//és ide létrehozom, amit akarok

metódusból null-t nem adunk vissza, vagy
1) kivétel kezelés
2) nullobjektet adunk vissza (új objekt, null értékekkel)
3) "Optional"-t adunk vissza

Optional<String> name = Optional.of("John Doe"); // ha teli
Optional<String> nobody = Optional.empty(); // ha üres

használat előtt:
if(nobody.isPresent()){
//do stuff
} else {
    System.out.println("nincs értéke!");
}

lambda:
nobody.ifPresent(n -> System.out.pritnln(n);

Delegálás - amikor a belsőbb osztálynak adja át a feladatot.
//this.functionA(){ return Other.functionA(); }
